   0  $accept : program $end

   1  program : definitions functions VOID MAIN '(' ')' '{' instructions '}'

   2  definitions :
   3              | definitions definition

   4  definition : type vars ';'
   5             | specialTypes

   6  vars : ID
   7       | vars ',' ID

   8  specialTypes : STRUCT '{' definitions '}' exp ';'
   9               | type '[' INTEGER ']' ID ';'
  10               | type '[' INTEGER ']' '[' INTEGER ']' ID ';'

  11  type : INT
  12       | DOUBLE
  13       | CHAR
  14       | STRING

  15  functions :
  16            | function functions

  17  function : type ID '(' parametersFunction ')' '{' instructions '}'

  18  instructions : instruction
  19               | instructions instruction

  20  instruction : definition
  21              | INPUT exp ';'
  22              | PRINT exp ';'
  23              | exp '=' exp ';'
  24              | ID '(' parameters ')' ';'
  25              | WHILE expCompare spetialStatement
  26              | IF expCompare spetialStatement
  27              | IF expCompare spetialStatement ELSE spetialStatement
  28              | RETURN exp ';'

  29  spetialStatement : '{' instructions '}'
  30                   | '{' '}'
  31                   | instruction

  32  parametersFunction :
  33                     | parameterFunction
  34                     | parametersFunction ',' parameterFunction

  35  parameterFunction : type ID

  36  parameters :
  37             | parameters vars

  38  expCompare : '(' expComp ')'
  39             | '(' expBin ')'

  40  expBin : expComp AND expComp
  41         | expComp OR expComp
  42         | '!' expComp
  43         | exp AND exp
  44         | exp OR exp
  45         | '!' exp
  46         | exp

  47  expComp : exp EQUAL exp
  48          | exp NOTEQUAL exp
  49          | exp LET exp
  50          | exp GET exp
  51          | exp '<' exp
  52          | exp '>' exp

  53  exp : exp '+' exp
  54      | exp '-' exp
  55      | exp '*' exp
  56      | exp '/' exp
  57      | exp '%' exp
  58      | exp '^' exp
  59      | '(' type ')' exp
  60      | ID '(' parameters ')'
  61      | INTEGER
  62      | REAL
  63      | LETTER
  64      | STRINGVALUE
  65      | exp '.' ID
  66      | ID
  67      | exp '[' exp ']'
  68      | exp '[' exp ']' '[' exp ']'

state 0
	$accept : . program $end  (0)
	definitions : .  (2)

	.  reduce 2

	program  goto 1
	definitions  goto 2


state 1
	$accept : program . $end  (0)

	$end  accept


state 2
	program : definitions . functions VOID MAIN '(' ')' '{' instructions '}'  (1)
	definitions : definitions . definition  (3)
	functions : .  (15)

	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	VOID  reduce 15

	functions  goto 8
	definition  goto 9
	type  goto 10
	specialTypes  goto 11
	function  goto 12


state 3
	type : STRING .  (14)

	.  reduce 14


state 4
	type : INT .  (11)

	.  reduce 11


state 5
	type : DOUBLE .  (12)

	.  reduce 12


state 6
	type : CHAR .  (13)

	.  reduce 13


state 7
	specialTypes : STRUCT . '{' definitions '}' exp ';'  (8)

	'{'  shift 13
	.  error


state 8
	program : definitions functions . VOID MAIN '(' ')' '{' instructions '}'  (1)

	VOID  shift 14
	.  error


state 9
	definitions : definitions definition .  (3)

	.  reduce 3


state 10
	definition : type . vars ';'  (4)
	specialTypes : type . '[' INTEGER ']' ID ';'  (9)
	specialTypes : type . '[' INTEGER ']' '[' INTEGER ']' ID ';'  (10)
	function : type . ID '(' parametersFunction ')' '{' instructions '}'  (17)

	ID  shift 15
	'['  shift 16
	.  error

	vars  goto 17


state 11
	definition : specialTypes .  (5)

	.  reduce 5


state 12
	functions : function . functions  (16)
	functions : .  (15)

	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	VOID  reduce 15

	functions  goto 18
	type  goto 19
	function  goto 12


state 13
	specialTypes : STRUCT '{' . definitions '}' exp ';'  (8)
	definitions : .  (2)

	.  reduce 2

	definitions  goto 20


state 14
	program : definitions functions VOID . MAIN '(' ')' '{' instructions '}'  (1)

	MAIN  shift 21
	.  error


state 15
	vars : ID .  (6)
	function : type ID . '(' parametersFunction ')' '{' instructions '}'  (17)

	'('  shift 22
	';'  reduce 6
	','  reduce 6


state 16
	specialTypes : type '[' . INTEGER ']' ID ';'  (9)
	specialTypes : type '[' . INTEGER ']' '[' INTEGER ']' ID ';'  (10)

	INTEGER  shift 23
	.  error


state 17
	definition : type vars . ';'  (4)
	vars : vars . ',' ID  (7)

	';'  shift 24
	','  shift 25
	.  error


state 18
	functions : function functions .  (16)

	.  reduce 16


state 19
	function : type . ID '(' parametersFunction ')' '{' instructions '}'  (17)

	ID  shift 26
	.  error


state 20
	definitions : definitions . definition  (3)
	specialTypes : STRUCT '{' definitions . '}' exp ';'  (8)

	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	'}'  shift 27
	.  error

	definition  goto 9
	type  goto 28
	specialTypes  goto 11


state 21
	program : definitions functions VOID MAIN . '(' ')' '{' instructions '}'  (1)

	'('  shift 29
	.  error


state 22
	function : type ID '(' . parametersFunction ')' '{' instructions '}'  (17)
	parametersFunction : .  (32)

	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	')'  reduce 32
	','  reduce 32

	type  goto 30
	parametersFunction  goto 31
	parameterFunction  goto 32


state 23
	specialTypes : type '[' INTEGER . ']' ID ';'  (9)
	specialTypes : type '[' INTEGER . ']' '[' INTEGER ']' ID ';'  (10)

	']'  shift 33
	.  error


state 24
	definition : type vars ';' .  (4)

	.  reduce 4


state 25
	vars : vars ',' . ID  (7)

	ID  shift 34
	.  error


state 26
	function : type ID . '(' parametersFunction ')' '{' instructions '}'  (17)

	'('  shift 22
	.  error


state 27
	specialTypes : STRUCT '{' definitions '}' . exp ';'  (8)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 41


state 28
	definition : type . vars ';'  (4)
	specialTypes : type . '[' INTEGER ']' ID ';'  (9)
	specialTypes : type . '[' INTEGER ']' '[' INTEGER ']' ID ';'  (10)

	ID  shift 42
	'['  shift 16
	.  error

	vars  goto 17


state 29
	program : definitions functions VOID MAIN '(' . ')' '{' instructions '}'  (1)

	')'  shift 43
	.  error


state 30
	parameterFunction : type . ID  (35)

	ID  shift 44
	.  error


state 31
	function : type ID '(' parametersFunction . ')' '{' instructions '}'  (17)
	parametersFunction : parametersFunction . ',' parameterFunction  (34)

	')'  shift 45
	','  shift 46
	.  error


state 32
	parametersFunction : parameterFunction .  (33)

	.  reduce 33


state 33
	specialTypes : type '[' INTEGER ']' . ID ';'  (9)
	specialTypes : type '[' INTEGER ']' . '[' INTEGER ']' ID ';'  (10)

	ID  shift 47
	'['  shift 48
	.  error


state 34
	vars : vars ',' ID .  (7)

	.  reduce 7


state 35
	exp : STRINGVALUE .  (64)

	.  reduce 64


state 36
	exp : INTEGER .  (61)

	.  reduce 61


state 37
	exp : REAL .  (62)

	.  reduce 62


state 38
	exp : LETTER .  (63)

	.  reduce 63


state 39
	exp : ID . '(' parameters ')'  (60)
	exp : ID .  (66)

	'('  shift 49
	EQUAL  reduce 66
	NOTEQUAL  reduce 66
	LET  reduce 66
	GET  reduce 66
	AND  reduce 66
	OR  reduce 66
	'-'  reduce 66
	'+'  reduce 66
	'*'  reduce 66
	'/'  reduce 66
	'%'  reduce 66
	'^'  reduce 66
	')'  reduce 66
	'.'  reduce 66
	']'  reduce 66
	'['  reduce 66
	';'  reduce 66
	'='  reduce 66
	'<'  reduce 66
	'>'  reduce 66


state 40
	exp : '(' . type ')' exp  (59)

	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	.  error

	type  goto 50


state 41
	specialTypes : STRUCT '{' definitions '}' exp . ';'  (8)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	';'  shift 59
	.  error


state 42
	vars : ID .  (6)

	.  reduce 6


state 43
	program : definitions functions VOID MAIN '(' ')' . '{' instructions '}'  (1)

	'{'  shift 60
	.  error


state 44
	parameterFunction : type ID .  (35)

	.  reduce 35


state 45
	function : type ID '(' parametersFunction ')' . '{' instructions '}'  (17)

	'{'  shift 61
	.  error


state 46
	parametersFunction : parametersFunction ',' . parameterFunction  (34)

	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	.  error

	type  goto 30
	parameterFunction  goto 62


state 47
	specialTypes : type '[' INTEGER ']' ID . ';'  (9)

	';'  shift 63
	.  error


state 48
	specialTypes : type '[' INTEGER ']' '[' . INTEGER ']' ID ';'  (10)

	INTEGER  shift 64
	.  error


state 49
	exp : ID '(' . parameters ')'  (60)
	parameters : .  (36)

	.  reduce 36

	parameters  goto 65


state 50
	exp : '(' type . ')' exp  (59)

	')'  shift 66
	.  error


state 51
	exp : exp '-' . exp  (54)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 67


state 52
	exp : exp '+' . exp  (53)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 68


state 53
	exp : exp '*' . exp  (55)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 69


state 54
	exp : exp '/' . exp  (56)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 70


state 55
	exp : exp '%' . exp  (57)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 71


state 56
	exp : exp '^' . exp  (58)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 72


state 57
	exp : exp '.' . ID  (65)

	ID  shift 73
	.  error


state 58
	exp : exp '[' . exp ']'  (67)
	exp : exp '[' . exp ']' '[' exp ']'  (68)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 74


state 59
	specialTypes : STRUCT '{' definitions '}' exp ';' .  (8)

	.  reduce 8


state 60
	program : definitions functions VOID MAIN '(' ')' '{' . instructions '}'  (1)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	.  error

	instructions  goto 81
	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 84


state 61
	function : type ID '(' parametersFunction ')' '{' . instructions '}'  (17)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	.  error

	instructions  goto 85
	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 84


state 62
	parametersFunction : parametersFunction ',' parameterFunction .  (34)

	.  reduce 34


state 63
	specialTypes : type '[' INTEGER ']' ID ';' .  (9)

	.  reduce 9


state 64
	specialTypes : type '[' INTEGER ']' '[' INTEGER . ']' ID ';'  (10)

	']'  shift 86
	.  error


state 65
	parameters : parameters . vars  (37)
	exp : ID '(' parameters . ')'  (60)

	ID  shift 42
	')'  shift 87
	.  error

	vars  goto 88


state 66
	exp : '(' type ')' . exp  (59)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 89


state 67
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp '-' exp .  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	EQUAL  reduce 54
	NOTEQUAL  reduce 54
	LET  reduce 54
	GET  reduce 54
	AND  reduce 54
	OR  reduce 54
	'-'  reduce 54
	'+'  reduce 54
	')'  reduce 54
	']'  reduce 54
	';'  reduce 54
	'='  reduce 54
	'<'  reduce 54
	'>'  reduce 54


state 68
	exp : exp . '+' exp  (53)
	exp : exp '+' exp .  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	EQUAL  reduce 53
	NOTEQUAL  reduce 53
	LET  reduce 53
	GET  reduce 53
	AND  reduce 53
	OR  reduce 53
	'-'  reduce 53
	'+'  reduce 53
	')'  reduce 53
	']'  reduce 53
	';'  reduce 53
	'='  reduce 53
	'<'  reduce 53
	'>'  reduce 53


state 69
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp '*' exp .  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	EQUAL  reduce 55
	NOTEQUAL  reduce 55
	LET  reduce 55
	GET  reduce 55
	AND  reduce 55
	OR  reduce 55
	'-'  reduce 55
	'+'  reduce 55
	'*'  reduce 55
	'/'  reduce 55
	'%'  reduce 55
	')'  reduce 55
	']'  reduce 55
	';'  reduce 55
	'='  reduce 55
	'<'  reduce 55
	'>'  reduce 55


state 70
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp '/' exp .  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	EQUAL  reduce 56
	NOTEQUAL  reduce 56
	LET  reduce 56
	GET  reduce 56
	AND  reduce 56
	OR  reduce 56
	'-'  reduce 56
	'+'  reduce 56
	'*'  reduce 56
	'/'  reduce 56
	'%'  reduce 56
	')'  reduce 56
	']'  reduce 56
	';'  reduce 56
	'='  reduce 56
	'<'  reduce 56
	'>'  reduce 56


state 71
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp '%' exp .  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	EQUAL  reduce 57
	NOTEQUAL  reduce 57
	LET  reduce 57
	GET  reduce 57
	AND  reduce 57
	OR  reduce 57
	'-'  reduce 57
	'+'  reduce 57
	'*'  reduce 57
	'/'  reduce 57
	'%'  reduce 57
	')'  reduce 57
	']'  reduce 57
	';'  reduce 57
	'='  reduce 57
	'<'  reduce 57
	'>'  reduce 57


state 72
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp '^' exp .  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	EQUAL  reduce 58
	NOTEQUAL  reduce 58
	LET  reduce 58
	GET  reduce 58
	AND  reduce 58
	OR  reduce 58
	'-'  reduce 58
	'+'  reduce 58
	'*'  reduce 58
	'/'  reduce 58
	'%'  reduce 58
	')'  reduce 58
	']'  reduce 58
	';'  reduce 58
	'='  reduce 58
	'<'  reduce 58
	'>'  reduce 58


state 73
	exp : exp '.' ID .  (65)

	.  reduce 65


state 74
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp '[' exp . ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)
	exp : exp '[' exp . ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	']'  shift 90
	'['  shift 58
	.  error


state 75
	instruction : IF . expCompare spetialStatement  (26)
	instruction : IF . expCompare spetialStatement ELSE spetialStatement  (27)

	'('  shift 91
	.  error

	expCompare  goto 92


state 76
	instruction : WHILE . expCompare spetialStatement  (25)

	'('  shift 91
	.  error

	expCompare  goto 93


state 77
	instruction : ID . '(' parameters ')' ';'  (24)
	exp : ID . '(' parameters ')'  (60)
	exp : ID .  (66)

	'('  shift 94
	'-'  reduce 66
	'+'  reduce 66
	'*'  reduce 66
	'/'  reduce 66
	'%'  reduce 66
	'^'  reduce 66
	'.'  reduce 66
	'['  reduce 66
	'='  reduce 66


state 78
	instruction : INPUT . exp ';'  (21)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 95


state 79
	instruction : PRINT . exp ';'  (22)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 96


state 80
	instruction : RETURN . exp ';'  (28)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 97


state 81
	program : definitions functions VOID MAIN '(' ')' '{' instructions . '}'  (1)
	instructions : instructions . instruction  (19)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'}'  shift 98
	.  error

	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 99


state 82
	instruction : definition .  (20)

	.  reduce 20


state 83
	instruction : exp . '=' exp ';'  (23)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	'='  shift 100
	.  error


state 84
	instructions : instruction .  (18)

	.  reduce 18


state 85
	function : type ID '(' parametersFunction ')' '{' instructions . '}'  (17)
	instructions : instructions . instruction  (19)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'}'  shift 101
	.  error

	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 99


state 86
	specialTypes : type '[' INTEGER ']' '[' INTEGER ']' . ID ';'  (10)

	ID  shift 102
	.  error


state 87
	exp : ID '(' parameters ')' .  (60)

	.  reduce 60


state 88
	vars : vars . ',' ID  (7)
	parameters : parameters vars .  (37)

	','  shift 25
	ID  reduce 37
	')'  reduce 37


state 89
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : '(' type ')' exp .  (59)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'['  shift 58
	EQUAL  reduce 59
	NOTEQUAL  reduce 59
	LET  reduce 59
	GET  reduce 59
	AND  reduce 59
	OR  reduce 59
	'-'  reduce 59
	'+'  reduce 59
	'*'  reduce 59
	'/'  reduce 59
	'%'  reduce 59
	'^'  reduce 59
	')'  reduce 59
	'.'  reduce 59
	']'  reduce 59
	';'  reduce 59
	'='  reduce 59
	'<'  reduce 59
	'>'  reduce 59


state 90
	exp : exp '[' exp ']' .  (67)
	exp : exp '[' exp ']' . '[' exp ']'  (68)

	'['  shift 103
	EQUAL  reduce 67
	NOTEQUAL  reduce 67
	LET  reduce 67
	GET  reduce 67
	AND  reduce 67
	OR  reduce 67
	'-'  reduce 67
	'+'  reduce 67
	'*'  reduce 67
	'/'  reduce 67
	'%'  reduce 67
	'^'  reduce 67
	')'  reduce 67
	'.'  reduce 67
	']'  reduce 67
	';'  reduce 67
	'='  reduce 67
	'<'  reduce 67
	'>'  reduce 67


state 91
	expCompare : '(' . expComp ')'  (38)
	expCompare : '(' . expBin ')'  (39)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	'!'  shift 104
	.  error

	exp  goto 105
	expComp  goto 106
	expBin  goto 107


state 92
	instruction : IF expCompare . spetialStatement  (26)
	instruction : IF expCompare . spetialStatement ELSE spetialStatement  (27)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'{'  shift 108
	.  error

	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 109
	spetialStatement  goto 110


state 93
	instruction : WHILE expCompare . spetialStatement  (25)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'{'  shift 108
	.  error

	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 109
	spetialStatement  goto 111


state 94
	instruction : ID '(' . parameters ')' ';'  (24)
	exp : ID '(' . parameters ')'  (60)
	parameters : .  (36)

	.  reduce 36

	parameters  goto 112


state 95
	instruction : INPUT exp . ';'  (21)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	';'  shift 113
	.  error


state 96
	instruction : PRINT exp . ';'  (22)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	';'  shift 114
	.  error


state 97
	instruction : RETURN exp . ';'  (28)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	';'  shift 115
	.  error


state 98
	program : definitions functions VOID MAIN '(' ')' '{' instructions '}' .  (1)

	.  reduce 1


state 99
	instructions : instructions instruction .  (19)

	.  reduce 19


state 100
	instruction : exp '=' . exp ';'  (23)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 116


state 101
	function : type ID '(' parametersFunction ')' '{' instructions '}' .  (17)

	.  reduce 17


state 102
	specialTypes : type '[' INTEGER ']' '[' INTEGER ']' ID . ';'  (10)

	';'  shift 117
	.  error


state 103
	exp : exp '[' exp ']' '[' . exp ']'  (68)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 118


state 104
	expBin : '!' . expComp  (42)
	expBin : '!' . exp  (45)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 119
	expComp  goto 120


state 105
	expBin : exp . AND exp  (43)
	expBin : exp . OR exp  (44)
	expBin : exp .  (46)
	expComp : exp . EQUAL exp  (47)
	expComp : exp . NOTEQUAL exp  (48)
	expComp : exp . LET exp  (49)
	expComp : exp . GET exp  (50)
	expComp : exp . '<' exp  (51)
	expComp : exp . '>' exp  (52)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	EQUAL  shift 121
	NOTEQUAL  shift 122
	LET  shift 123
	GET  shift 124
	AND  shift 125
	OR  shift 126
	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	'<'  shift 127
	'>'  shift 128
	')'  reduce 46


state 106
	expCompare : '(' expComp . ')'  (38)
	expBin : expComp . AND expComp  (40)
	expBin : expComp . OR expComp  (41)

	AND  shift 129
	OR  shift 130
	')'  shift 131
	.  error


state 107
	expCompare : '(' expBin . ')'  (39)

	')'  shift 132
	.  error


state 108
	spetialStatement : '{' . instructions '}'  (29)
	spetialStatement : '{' . '}'  (30)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'}'  shift 133
	.  error

	instructions  goto 134
	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 84


state 109
	spetialStatement : instruction .  (31)

	.  reduce 31


state 110
	instruction : IF expCompare spetialStatement .  (26)
	instruction : IF expCompare spetialStatement . ELSE spetialStatement  (27)

	ELSE  shift 135
	STRINGVALUE  reduce 26
	INTEGER  reduce 26
	REAL  reduce 26
	LETTER  reduce 26
	STRING  reduce 26
	INT  reduce 26
	DOUBLE  reduce 26
	CHAR  reduce 26
	STRUCT  reduce 26
	IF  reduce 26
	WHILE  reduce 26
	ID  reduce 26
	INPUT  reduce 26
	PRINT  reduce 26
	RETURN  reduce 26
	'('  reduce 26
	'}'  reduce 26


state 111
	instruction : WHILE expCompare spetialStatement .  (25)

	.  reduce 25


state 112
	instruction : ID '(' parameters . ')' ';'  (24)
	parameters : parameters . vars  (37)
	exp : ID '(' parameters . ')'  (60)

	ID  shift 42
	')'  shift 136
	.  error

	vars  goto 88


state 113
	instruction : INPUT exp ';' .  (21)

	.  reduce 21


state 114
	instruction : PRINT exp ';' .  (22)

	.  reduce 22


state 115
	instruction : RETURN exp ';' .  (28)

	.  reduce 28


state 116
	instruction : exp '=' exp . ';'  (23)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	';'  shift 137
	.  error


state 117
	specialTypes : type '[' INTEGER ']' '[' INTEGER ']' ID ';' .  (10)

	.  reduce 10


state 118
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)
	exp : exp '[' exp ']' '[' exp . ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	']'  shift 138
	'['  shift 58
	.  error


state 119
	expBin : '!' exp .  (45)
	expComp : exp . EQUAL exp  (47)
	expComp : exp . NOTEQUAL exp  (48)
	expComp : exp . LET exp  (49)
	expComp : exp . GET exp  (50)
	expComp : exp . '<' exp  (51)
	expComp : exp . '>' exp  (52)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	EQUAL  shift 121
	NOTEQUAL  shift 122
	LET  shift 123
	GET  shift 124
	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	'<'  shift 127
	'>'  shift 128
	')'  reduce 45


state 120
	expBin : '!' expComp .  (42)

	.  reduce 42


state 121
	expComp : exp EQUAL . exp  (47)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 139


state 122
	expComp : exp NOTEQUAL . exp  (48)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 140


state 123
	expComp : exp LET . exp  (49)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 141


state 124
	expComp : exp GET . exp  (50)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 142


state 125
	expBin : exp AND . exp  (43)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 143


state 126
	expBin : exp OR . exp  (44)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 144


state 127
	expComp : exp '<' . exp  (51)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 145


state 128
	expComp : exp '>' . exp  (52)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 146


state 129
	expBin : expComp AND . expComp  (40)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 147
	expComp  goto 148


state 130
	expBin : expComp OR . expComp  (41)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 147
	expComp  goto 149


state 131
	expCompare : '(' expComp ')' .  (38)

	.  reduce 38


state 132
	expCompare : '(' expBin ')' .  (39)

	.  reduce 39


state 133
	spetialStatement : '{' '}' .  (30)

	.  reduce 30


state 134
	instructions : instructions . instruction  (19)
	spetialStatement : '{' instructions . '}'  (29)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'}'  shift 150
	.  error

	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 99


state 135
	instruction : IF expCompare spetialStatement ELSE . spetialStatement  (27)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'{'  shift 108
	.  error

	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 109
	spetialStatement  goto 151


state 136
	instruction : ID '(' parameters ')' . ';'  (24)
	exp : ID '(' parameters ')' .  (60)

	';'  shift 152
	'-'  reduce 60
	'+'  reduce 60
	'*'  reduce 60
	'/'  reduce 60
	'%'  reduce 60
	'^'  reduce 60
	'.'  reduce 60
	'['  reduce 60
	'='  reduce 60


state 137
	instruction : exp '=' exp ';' .  (23)

	.  reduce 23


state 138
	exp : exp '[' exp ']' '[' exp ']' .  (68)

	.  reduce 68


state 139
	expComp : exp EQUAL exp .  (47)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	AND  reduce 47
	OR  reduce 47
	')'  reduce 47


state 140
	expComp : exp NOTEQUAL exp .  (48)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	AND  reduce 48
	OR  reduce 48
	')'  reduce 48


state 141
	expComp : exp LET exp .  (49)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	AND  reduce 49
	OR  reduce 49
	')'  reduce 49


state 142
	expComp : exp GET exp .  (50)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	AND  reduce 50
	OR  reduce 50
	')'  reduce 50


state 143
	expBin : exp AND exp .  (43)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	')'  reduce 43


state 144
	expBin : exp OR exp .  (44)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	')'  reduce 44


state 145
	expComp : exp '<' exp .  (51)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	AND  reduce 51
	OR  reduce 51
	')'  reduce 51


state 146
	expComp : exp '>' exp .  (52)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	AND  reduce 52
	OR  reduce 52
	')'  reduce 52


state 147
	expComp : exp . EQUAL exp  (47)
	expComp : exp . NOTEQUAL exp  (48)
	expComp : exp . LET exp  (49)
	expComp : exp . GET exp  (50)
	expComp : exp . '<' exp  (51)
	expComp : exp . '>' exp  (52)
	exp : exp . '+' exp  (53)
	exp : exp . '-' exp  (54)
	exp : exp . '*' exp  (55)
	exp : exp . '/' exp  (56)
	exp : exp . '%' exp  (57)
	exp : exp . '^' exp  (58)
	exp : exp . '.' ID  (65)
	exp : exp . '[' exp ']'  (67)
	exp : exp . '[' exp ']' '[' exp ']'  (68)

	EQUAL  shift 121
	NOTEQUAL  shift 122
	LET  shift 123
	GET  shift 124
	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	'<'  shift 127
	'>'  shift 128
	.  error


state 148
	expBin : expComp AND expComp .  (40)

	.  reduce 40


state 149
	expBin : expComp OR expComp .  (41)

	.  reduce 41


state 150
	spetialStatement : '{' instructions '}' .  (29)

	.  reduce 29


state 151
	instruction : IF expCompare spetialStatement ELSE spetialStatement .  (27)

	.  reduce 27


state 152
	instruction : ID '(' parameters ')' ';' .  (24)

	.  reduce 24


55 terminals, 19 nonterminals
69 grammar rules, 153 states
