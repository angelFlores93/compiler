   0  $accept : program $end

   1  program : definitions functions VOID MAIN '(' ')' '{' instructions '}'

   2  definitions :
   3              | definitions definition

   4  definition : type vars ';'
   5             | specialTypes

   6  vars : ID
   7       | vars ',' ID

   8  specialTypes : STRUCT '{' definitions '}' exp ';'
   9               | type '[' INTEGER ']' ID ';'
  10               | type '[' INTEGER ']' '[' INTEGER ']' ID ';'

  11  type : INT
  12       | DOUBLE
  13       | CHAR
  14       | STRING

  15  functions :
  16            | function functions

  17  function : type ID '(' parametersFunction ')' '{' instructions '}'

  18  instructions : instruction
  19               | instructions instruction

  20  instruction : definition
  21              | INPUT exp ';'
  22              | PRINT exp ';'
  23              | exp '=' exp ';'
  24              | ID '(' parameters ')' ';'
  25              | WHILE expCompare spetialStatement
  26              | IF expCompare spetialStatement
  27              | IF expCompare spetialStatement ELSE spetialStatement
  28              | RETURN exp ';'

  29  spetialStatement : '{' instructions '}'
  30                   | '{' '}'
  31                   | instruction

  32  parametersFunction :
  33                     | parameterFunction
  34                     | parametersFunction ',' parameterFunction

  35  parameterFunction : type ID

  36  parameters :
  37             | parameters exps

  38  expCompare : '(' expComp ')'
  39             | '(' expBin ')'

  40  exps : exp
  41       | exps ',' exp

  42  expBin : expComp AND expComp
  43         | expComp OR expComp
  44         | '!' expComp
  45         | exp AND exp
  46         | exp OR exp
  47         | '!' exp
  48         | exp

  49  expComp : exp EQUAL exp
  50          | exp NOTEQUAL exp
  51          | exp LET exp
  52          | exp GET exp
  53          | exp '<' exp
  54          | exp '>' exp

  55  exp : exp '+' exp
  56      | exp '-' exp
  57      | exp '*' exp
  58      | exp '/' exp
  59      | exp '%' exp
  60      | exp '^' exp
  61      | '(' type ')' exp
  62      | ID '(' parameters ')'
  63      | INTEGER
  64      | REAL
  65      | LETTER
  66      | STRINGVALUE
  67      | exp '.' ID
  68      | ID
  69      | exp '[' exp ']'
  70      | exp '[' exp ']' '[' exp ']'

state 0
	$accept : . program $end  (0)
	definitions : .  (2)

	.  reduce 2

	program  goto 1
	definitions  goto 2


state 1
	$accept : program . $end  (0)

	$end  accept


state 2
	program : definitions . functions VOID MAIN '(' ')' '{' instructions '}'  (1)
	definitions : definitions . definition  (3)
	functions : .  (15)

	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	VOID  reduce 15

	functions  goto 8
	definition  goto 9
	type  goto 10
	specialTypes  goto 11
	function  goto 12


state 3
	type : STRING .  (14)

	.  reduce 14


state 4
	type : INT .  (11)

	.  reduce 11


state 5
	type : DOUBLE .  (12)

	.  reduce 12


state 6
	type : CHAR .  (13)

	.  reduce 13


state 7
	specialTypes : STRUCT . '{' definitions '}' exp ';'  (8)

	'{'  shift 13
	.  error


state 8
	program : definitions functions . VOID MAIN '(' ')' '{' instructions '}'  (1)

	VOID  shift 14
	.  error


state 9
	definitions : definitions definition .  (3)

	.  reduce 3


state 10
	definition : type . vars ';'  (4)
	specialTypes : type . '[' INTEGER ']' ID ';'  (9)
	specialTypes : type . '[' INTEGER ']' '[' INTEGER ']' ID ';'  (10)
	function : type . ID '(' parametersFunction ')' '{' instructions '}'  (17)

	ID  shift 15
	'['  shift 16
	.  error

	vars  goto 17


state 11
	definition : specialTypes .  (5)

	.  reduce 5


state 12
	functions : function . functions  (16)
	functions : .  (15)

	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	VOID  reduce 15

	functions  goto 18
	type  goto 19
	function  goto 12


state 13
	specialTypes : STRUCT '{' . definitions '}' exp ';'  (8)
	definitions : .  (2)

	.  reduce 2

	definitions  goto 20


state 14
	program : definitions functions VOID . MAIN '(' ')' '{' instructions '}'  (1)

	MAIN  shift 21
	.  error


state 15
	vars : ID .  (6)
	function : type ID . '(' parametersFunction ')' '{' instructions '}'  (17)

	'('  shift 22
	';'  reduce 6
	','  reduce 6


state 16
	specialTypes : type '[' . INTEGER ']' ID ';'  (9)
	specialTypes : type '[' . INTEGER ']' '[' INTEGER ']' ID ';'  (10)

	INTEGER  shift 23
	.  error


state 17
	definition : type vars . ';'  (4)
	vars : vars . ',' ID  (7)

	';'  shift 24
	','  shift 25
	.  error


state 18
	functions : function functions .  (16)

	.  reduce 16


state 19
	function : type . ID '(' parametersFunction ')' '{' instructions '}'  (17)

	ID  shift 26
	.  error


state 20
	definitions : definitions . definition  (3)
	specialTypes : STRUCT '{' definitions . '}' exp ';'  (8)

	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	'}'  shift 27
	.  error

	definition  goto 9
	type  goto 28
	specialTypes  goto 11


state 21
	program : definitions functions VOID MAIN . '(' ')' '{' instructions '}'  (1)

	'('  shift 29
	.  error


state 22
	function : type ID '(' . parametersFunction ')' '{' instructions '}'  (17)
	parametersFunction : .  (32)

	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	')'  reduce 32
	','  reduce 32

	type  goto 30
	parametersFunction  goto 31
	parameterFunction  goto 32


state 23
	specialTypes : type '[' INTEGER . ']' ID ';'  (9)
	specialTypes : type '[' INTEGER . ']' '[' INTEGER ']' ID ';'  (10)

	']'  shift 33
	.  error


state 24
	definition : type vars ';' .  (4)

	.  reduce 4


state 25
	vars : vars ',' . ID  (7)

	ID  shift 34
	.  error


state 26
	function : type ID . '(' parametersFunction ')' '{' instructions '}'  (17)

	'('  shift 22
	.  error


state 27
	specialTypes : STRUCT '{' definitions '}' . exp ';'  (8)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 41


state 28
	definition : type . vars ';'  (4)
	specialTypes : type . '[' INTEGER ']' ID ';'  (9)
	specialTypes : type . '[' INTEGER ']' '[' INTEGER ']' ID ';'  (10)

	ID  shift 42
	'['  shift 16
	.  error

	vars  goto 17


state 29
	program : definitions functions VOID MAIN '(' . ')' '{' instructions '}'  (1)

	')'  shift 43
	.  error


state 30
	parameterFunction : type . ID  (35)

	ID  shift 44
	.  error


state 31
	function : type ID '(' parametersFunction . ')' '{' instructions '}'  (17)
	parametersFunction : parametersFunction . ',' parameterFunction  (34)

	')'  shift 45
	','  shift 46
	.  error


state 32
	parametersFunction : parameterFunction .  (33)

	.  reduce 33


state 33
	specialTypes : type '[' INTEGER ']' . ID ';'  (9)
	specialTypes : type '[' INTEGER ']' . '[' INTEGER ']' ID ';'  (10)

	ID  shift 47
	'['  shift 48
	.  error


state 34
	vars : vars ',' ID .  (7)

	.  reduce 7


state 35
	exp : STRINGVALUE .  (66)

	.  reduce 66


state 36
	exp : INTEGER .  (63)

	.  reduce 63


state 37
	exp : REAL .  (64)

	.  reduce 64


state 38
	exp : LETTER .  (65)

	.  reduce 65


39: shift/reduce conflict (shift 49, reduce 68) on '('
state 39
	exp : ID . '(' parameters ')'  (62)
	exp : ID .  (68)

	'('  shift 49
	EQUAL  reduce 68
	NOTEQUAL  reduce 68
	LET  reduce 68
	GET  reduce 68
	AND  reduce 68
	OR  reduce 68
	STRINGVALUE  reduce 68
	INTEGER  reduce 68
	REAL  reduce 68
	LETTER  reduce 68
	ID  reduce 68
	'-'  reduce 68
	'+'  reduce 68
	'*'  reduce 68
	'/'  reduce 68
	'%'  reduce 68
	'^'  reduce 68
	')'  reduce 68
	'.'  reduce 68
	']'  reduce 68
	'['  reduce 68
	';'  reduce 68
	','  reduce 68
	'='  reduce 68
	'<'  reduce 68
	'>'  reduce 68


state 40
	exp : '(' . type ')' exp  (61)

	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	.  error

	type  goto 50


state 41
	specialTypes : STRUCT '{' definitions '}' exp . ';'  (8)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	';'  shift 59
	.  error


state 42
	vars : ID .  (6)

	.  reduce 6


state 43
	program : definitions functions VOID MAIN '(' ')' . '{' instructions '}'  (1)

	'{'  shift 60
	.  error


state 44
	parameterFunction : type ID .  (35)

	.  reduce 35


state 45
	function : type ID '(' parametersFunction ')' . '{' instructions '}'  (17)

	'{'  shift 61
	.  error


state 46
	parametersFunction : parametersFunction ',' . parameterFunction  (34)

	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	.  error

	type  goto 30
	parameterFunction  goto 62


state 47
	specialTypes : type '[' INTEGER ']' ID . ';'  (9)

	';'  shift 63
	.  error


state 48
	specialTypes : type '[' INTEGER ']' '[' . INTEGER ']' ID ';'  (10)

	INTEGER  shift 64
	.  error


state 49
	exp : ID '(' . parameters ')'  (62)
	parameters : .  (36)

	.  reduce 36

	parameters  goto 65


state 50
	exp : '(' type . ')' exp  (61)

	')'  shift 66
	.  error


state 51
	exp : exp '-' . exp  (56)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 67


state 52
	exp : exp '+' . exp  (55)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 68


state 53
	exp : exp '*' . exp  (57)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 69


state 54
	exp : exp '/' . exp  (58)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 70


state 55
	exp : exp '%' . exp  (59)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 71


state 56
	exp : exp '^' . exp  (60)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 72


state 57
	exp : exp '.' . ID  (67)

	ID  shift 73
	.  error


state 58
	exp : exp '[' . exp ']'  (69)
	exp : exp '[' . exp ']' '[' exp ']'  (70)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 74


state 59
	specialTypes : STRUCT '{' definitions '}' exp ';' .  (8)

	.  reduce 8


state 60
	program : definitions functions VOID MAIN '(' ')' '{' . instructions '}'  (1)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	.  error

	instructions  goto 81
	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 84


state 61
	function : type ID '(' parametersFunction ')' '{' . instructions '}'  (17)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	.  error

	instructions  goto 85
	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 84


state 62
	parametersFunction : parametersFunction ',' parameterFunction .  (34)

	.  reduce 34


state 63
	specialTypes : type '[' INTEGER ']' ID ';' .  (9)

	.  reduce 9


state 64
	specialTypes : type '[' INTEGER ']' '[' INTEGER . ']' ID ';'  (10)

	']'  shift 86
	.  error


state 65
	parameters : parameters . exps  (37)
	exp : ID '(' parameters . ')'  (62)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	')'  shift 87
	'('  shift 40
	.  error

	exp  goto 88
	exps  goto 89


state 66
	exp : '(' type ')' . exp  (61)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 90


state 67
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp '-' exp .  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	EQUAL  reduce 56
	NOTEQUAL  reduce 56
	LET  reduce 56
	GET  reduce 56
	AND  reduce 56
	OR  reduce 56
	STRINGVALUE  reduce 56
	INTEGER  reduce 56
	REAL  reduce 56
	LETTER  reduce 56
	ID  reduce 56
	'-'  reduce 56
	'+'  reduce 56
	')'  reduce 56
	']'  reduce 56
	'('  reduce 56
	';'  reduce 56
	','  reduce 56
	'='  reduce 56
	'<'  reduce 56
	'>'  reduce 56


state 68
	exp : exp . '+' exp  (55)
	exp : exp '+' exp .  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	EQUAL  reduce 55
	NOTEQUAL  reduce 55
	LET  reduce 55
	GET  reduce 55
	AND  reduce 55
	OR  reduce 55
	STRINGVALUE  reduce 55
	INTEGER  reduce 55
	REAL  reduce 55
	LETTER  reduce 55
	ID  reduce 55
	'-'  reduce 55
	'+'  reduce 55
	')'  reduce 55
	']'  reduce 55
	'('  reduce 55
	';'  reduce 55
	','  reduce 55
	'='  reduce 55
	'<'  reduce 55
	'>'  reduce 55


state 69
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp '*' exp .  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	EQUAL  reduce 57
	NOTEQUAL  reduce 57
	LET  reduce 57
	GET  reduce 57
	AND  reduce 57
	OR  reduce 57
	STRINGVALUE  reduce 57
	INTEGER  reduce 57
	REAL  reduce 57
	LETTER  reduce 57
	ID  reduce 57
	'-'  reduce 57
	'+'  reduce 57
	'*'  reduce 57
	'/'  reduce 57
	'%'  reduce 57
	')'  reduce 57
	']'  reduce 57
	'('  reduce 57
	';'  reduce 57
	','  reduce 57
	'='  reduce 57
	'<'  reduce 57
	'>'  reduce 57


state 70
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp '/' exp .  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	EQUAL  reduce 58
	NOTEQUAL  reduce 58
	LET  reduce 58
	GET  reduce 58
	AND  reduce 58
	OR  reduce 58
	STRINGVALUE  reduce 58
	INTEGER  reduce 58
	REAL  reduce 58
	LETTER  reduce 58
	ID  reduce 58
	'-'  reduce 58
	'+'  reduce 58
	'*'  reduce 58
	'/'  reduce 58
	'%'  reduce 58
	')'  reduce 58
	']'  reduce 58
	'('  reduce 58
	';'  reduce 58
	','  reduce 58
	'='  reduce 58
	'<'  reduce 58
	'>'  reduce 58


state 71
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp '%' exp .  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	EQUAL  reduce 59
	NOTEQUAL  reduce 59
	LET  reduce 59
	GET  reduce 59
	AND  reduce 59
	OR  reduce 59
	STRINGVALUE  reduce 59
	INTEGER  reduce 59
	REAL  reduce 59
	LETTER  reduce 59
	ID  reduce 59
	'-'  reduce 59
	'+'  reduce 59
	'*'  reduce 59
	'/'  reduce 59
	'%'  reduce 59
	')'  reduce 59
	']'  reduce 59
	'('  reduce 59
	';'  reduce 59
	','  reduce 59
	'='  reduce 59
	'<'  reduce 59
	'>'  reduce 59


state 72
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp '^' exp .  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	EQUAL  reduce 60
	NOTEQUAL  reduce 60
	LET  reduce 60
	GET  reduce 60
	AND  reduce 60
	OR  reduce 60
	STRINGVALUE  reduce 60
	INTEGER  reduce 60
	REAL  reduce 60
	LETTER  reduce 60
	ID  reduce 60
	'-'  reduce 60
	'+'  reduce 60
	'*'  reduce 60
	'/'  reduce 60
	'%'  reduce 60
	')'  reduce 60
	']'  reduce 60
	'('  reduce 60
	';'  reduce 60
	','  reduce 60
	'='  reduce 60
	'<'  reduce 60
	'>'  reduce 60


state 73
	exp : exp '.' ID .  (67)

	.  reduce 67


state 74
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp '[' exp . ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)
	exp : exp '[' exp . ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	']'  shift 91
	'['  shift 58
	.  error


state 75
	instruction : IF . expCompare spetialStatement  (26)
	instruction : IF . expCompare spetialStatement ELSE spetialStatement  (27)

	'('  shift 92
	.  error

	expCompare  goto 93


state 76
	instruction : WHILE . expCompare spetialStatement  (25)

	'('  shift 92
	.  error

	expCompare  goto 94


state 77
	instruction : ID . '(' parameters ')' ';'  (24)
	exp : ID . '(' parameters ')'  (62)
	exp : ID .  (68)

	'('  shift 95
	'-'  reduce 68
	'+'  reduce 68
	'*'  reduce 68
	'/'  reduce 68
	'%'  reduce 68
	'^'  reduce 68
	'.'  reduce 68
	'['  reduce 68
	'='  reduce 68


state 78
	instruction : INPUT . exp ';'  (21)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 96


state 79
	instruction : PRINT . exp ';'  (22)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 97


state 80
	instruction : RETURN . exp ';'  (28)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 98


state 81
	program : definitions functions VOID MAIN '(' ')' '{' instructions . '}'  (1)
	instructions : instructions . instruction  (19)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'}'  shift 99
	.  error

	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 100


state 82
	instruction : definition .  (20)

	.  reduce 20


state 83
	instruction : exp . '=' exp ';'  (23)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	'='  shift 101
	.  error


state 84
	instructions : instruction .  (18)

	.  reduce 18


state 85
	function : type ID '(' parametersFunction ')' '{' instructions . '}'  (17)
	instructions : instructions . instruction  (19)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'}'  shift 102
	.  error

	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 100


state 86
	specialTypes : type '[' INTEGER ']' '[' INTEGER ']' . ID ';'  (10)

	ID  shift 103
	.  error


state 87
	exp : ID '(' parameters ')' .  (62)

	.  reduce 62


state 88
	exps : exp .  (40)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	STRINGVALUE  reduce 40
	INTEGER  reduce 40
	REAL  reduce 40
	LETTER  reduce 40
	ID  reduce 40
	')'  reduce 40
	'('  reduce 40
	','  reduce 40


state 89
	parameters : parameters exps .  (37)
	exps : exps . ',' exp  (41)

	','  shift 104
	STRINGVALUE  reduce 37
	INTEGER  reduce 37
	REAL  reduce 37
	LETTER  reduce 37
	ID  reduce 37
	')'  reduce 37
	'('  reduce 37


state 90
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : '(' type ')' exp .  (61)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'['  shift 58
	EQUAL  reduce 61
	NOTEQUAL  reduce 61
	LET  reduce 61
	GET  reduce 61
	AND  reduce 61
	OR  reduce 61
	STRINGVALUE  reduce 61
	INTEGER  reduce 61
	REAL  reduce 61
	LETTER  reduce 61
	ID  reduce 61
	'-'  reduce 61
	'+'  reduce 61
	'*'  reduce 61
	'/'  reduce 61
	'%'  reduce 61
	'^'  reduce 61
	')'  reduce 61
	'.'  reduce 61
	']'  reduce 61
	'('  reduce 61
	';'  reduce 61
	','  reduce 61
	'='  reduce 61
	'<'  reduce 61
	'>'  reduce 61


state 91
	exp : exp '[' exp ']' .  (69)
	exp : exp '[' exp ']' . '[' exp ']'  (70)

	'['  shift 105
	EQUAL  reduce 69
	NOTEQUAL  reduce 69
	LET  reduce 69
	GET  reduce 69
	AND  reduce 69
	OR  reduce 69
	STRINGVALUE  reduce 69
	INTEGER  reduce 69
	REAL  reduce 69
	LETTER  reduce 69
	ID  reduce 69
	'-'  reduce 69
	'+'  reduce 69
	'*'  reduce 69
	'/'  reduce 69
	'%'  reduce 69
	'^'  reduce 69
	')'  reduce 69
	'.'  reduce 69
	']'  reduce 69
	'('  reduce 69
	';'  reduce 69
	','  reduce 69
	'='  reduce 69
	'<'  reduce 69
	'>'  reduce 69


state 92
	expCompare : '(' . expComp ')'  (38)
	expCompare : '(' . expBin ')'  (39)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	'!'  shift 106
	.  error

	exp  goto 107
	expComp  goto 108
	expBin  goto 109


state 93
	instruction : IF expCompare . spetialStatement  (26)
	instruction : IF expCompare . spetialStatement ELSE spetialStatement  (27)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'{'  shift 110
	.  error

	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 111
	spetialStatement  goto 112


state 94
	instruction : WHILE expCompare . spetialStatement  (25)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'{'  shift 110
	.  error

	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 111
	spetialStatement  goto 113


state 95
	instruction : ID '(' . parameters ')' ';'  (24)
	exp : ID '(' . parameters ')'  (62)
	parameters : .  (36)

	.  reduce 36

	parameters  goto 114


state 96
	instruction : INPUT exp . ';'  (21)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	';'  shift 115
	.  error


state 97
	instruction : PRINT exp . ';'  (22)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	';'  shift 116
	.  error


state 98
	instruction : RETURN exp . ';'  (28)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	';'  shift 117
	.  error


state 99
	program : definitions functions VOID MAIN '(' ')' '{' instructions '}' .  (1)

	.  reduce 1


state 100
	instructions : instructions instruction .  (19)

	.  reduce 19


state 101
	instruction : exp '=' . exp ';'  (23)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 118


state 102
	function : type ID '(' parametersFunction ')' '{' instructions '}' .  (17)

	.  reduce 17


state 103
	specialTypes : type '[' INTEGER ']' '[' INTEGER ']' ID . ';'  (10)

	';'  shift 119
	.  error


state 104
	exps : exps ',' . exp  (41)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 120


state 105
	exp : exp '[' exp ']' '[' . exp ']'  (70)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 121


state 106
	expBin : '!' . expComp  (44)
	expBin : '!' . exp  (47)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 122
	expComp  goto 123


state 107
	expBin : exp . AND exp  (45)
	expBin : exp . OR exp  (46)
	expBin : exp .  (48)
	expComp : exp . EQUAL exp  (49)
	expComp : exp . NOTEQUAL exp  (50)
	expComp : exp . LET exp  (51)
	expComp : exp . GET exp  (52)
	expComp : exp . '<' exp  (53)
	expComp : exp . '>' exp  (54)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	EQUAL  shift 124
	NOTEQUAL  shift 125
	LET  shift 126
	GET  shift 127
	AND  shift 128
	OR  shift 129
	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	'<'  shift 130
	'>'  shift 131
	')'  reduce 48


state 108
	expCompare : '(' expComp . ')'  (38)
	expBin : expComp . AND expComp  (42)
	expBin : expComp . OR expComp  (43)

	AND  shift 132
	OR  shift 133
	')'  shift 134
	.  error


state 109
	expCompare : '(' expBin . ')'  (39)

	')'  shift 135
	.  error


state 110
	spetialStatement : '{' . instructions '}'  (29)
	spetialStatement : '{' . '}'  (30)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'}'  shift 136
	.  error

	instructions  goto 137
	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 84


state 111
	spetialStatement : instruction .  (31)

	.  reduce 31


state 112
	instruction : IF expCompare spetialStatement .  (26)
	instruction : IF expCompare spetialStatement . ELSE spetialStatement  (27)

	ELSE  shift 138
	STRINGVALUE  reduce 26
	INTEGER  reduce 26
	REAL  reduce 26
	LETTER  reduce 26
	STRING  reduce 26
	INT  reduce 26
	DOUBLE  reduce 26
	CHAR  reduce 26
	STRUCT  reduce 26
	IF  reduce 26
	WHILE  reduce 26
	ID  reduce 26
	INPUT  reduce 26
	PRINT  reduce 26
	RETURN  reduce 26
	'('  reduce 26
	'}'  reduce 26


state 113
	instruction : WHILE expCompare spetialStatement .  (25)

	.  reduce 25


state 114
	instruction : ID '(' parameters . ')' ';'  (24)
	parameters : parameters . exps  (37)
	exp : ID '(' parameters . ')'  (62)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	')'  shift 139
	'('  shift 40
	.  error

	exp  goto 88
	exps  goto 89


state 115
	instruction : INPUT exp ';' .  (21)

	.  reduce 21


state 116
	instruction : PRINT exp ';' .  (22)

	.  reduce 22


state 117
	instruction : RETURN exp ';' .  (28)

	.  reduce 28


state 118
	instruction : exp '=' exp . ';'  (23)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	';'  shift 140
	.  error


state 119
	specialTypes : type '[' INTEGER ']' '[' INTEGER ']' ID ';' .  (10)

	.  reduce 10


state 120
	exps : exps ',' exp .  (41)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	STRINGVALUE  reduce 41
	INTEGER  reduce 41
	REAL  reduce 41
	LETTER  reduce 41
	ID  reduce 41
	')'  reduce 41
	'('  reduce 41
	','  reduce 41


state 121
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)
	exp : exp '[' exp ']' '[' exp . ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	']'  shift 141
	'['  shift 58
	.  error


state 122
	expBin : '!' exp .  (47)
	expComp : exp . EQUAL exp  (49)
	expComp : exp . NOTEQUAL exp  (50)
	expComp : exp . LET exp  (51)
	expComp : exp . GET exp  (52)
	expComp : exp . '<' exp  (53)
	expComp : exp . '>' exp  (54)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	EQUAL  shift 124
	NOTEQUAL  shift 125
	LET  shift 126
	GET  shift 127
	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	'<'  shift 130
	'>'  shift 131
	')'  reduce 47


state 123
	expBin : '!' expComp .  (44)

	.  reduce 44


state 124
	expComp : exp EQUAL . exp  (49)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 142


state 125
	expComp : exp NOTEQUAL . exp  (50)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 143


state 126
	expComp : exp LET . exp  (51)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 144


state 127
	expComp : exp GET . exp  (52)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 145


state 128
	expBin : exp AND . exp  (45)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 146


state 129
	expBin : exp OR . exp  (46)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 147


state 130
	expComp : exp '<' . exp  (53)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 148


state 131
	expComp : exp '>' . exp  (54)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 149


state 132
	expBin : expComp AND . expComp  (42)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 150
	expComp  goto 151


state 133
	expBin : expComp OR . expComp  (43)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	ID  shift 39
	'('  shift 40
	.  error

	exp  goto 150
	expComp  goto 152


state 134
	expCompare : '(' expComp ')' .  (38)

	.  reduce 38


state 135
	expCompare : '(' expBin ')' .  (39)

	.  reduce 39


state 136
	spetialStatement : '{' '}' .  (30)

	.  reduce 30


state 137
	instructions : instructions . instruction  (19)
	spetialStatement : '{' instructions . '}'  (29)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'}'  shift 153
	.  error

	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 100


state 138
	instruction : IF expCompare spetialStatement ELSE . spetialStatement  (27)

	STRINGVALUE  shift 35
	INTEGER  shift 36
	REAL  shift 37
	LETTER  shift 38
	STRING  shift 3
	INT  shift 4
	DOUBLE  shift 5
	CHAR  shift 6
	STRUCT  shift 7
	IF  shift 75
	WHILE  shift 76
	ID  shift 77
	INPUT  shift 78
	PRINT  shift 79
	RETURN  shift 80
	'('  shift 40
	'{'  shift 110
	.  error

	definition  goto 82
	type  goto 28
	specialTypes  goto 11
	exp  goto 83
	instruction  goto 111
	spetialStatement  goto 154


state 139
	instruction : ID '(' parameters ')' . ';'  (24)
	exp : ID '(' parameters ')' .  (62)

	';'  shift 155
	'-'  reduce 62
	'+'  reduce 62
	'*'  reduce 62
	'/'  reduce 62
	'%'  reduce 62
	'^'  reduce 62
	'.'  reduce 62
	'['  reduce 62
	'='  reduce 62


state 140
	instruction : exp '=' exp ';' .  (23)

	.  reduce 23


state 141
	exp : exp '[' exp ']' '[' exp ']' .  (70)

	.  reduce 70


state 142
	expComp : exp EQUAL exp .  (49)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	AND  reduce 49
	OR  reduce 49
	')'  reduce 49


state 143
	expComp : exp NOTEQUAL exp .  (50)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	AND  reduce 50
	OR  reduce 50
	')'  reduce 50


state 144
	expComp : exp LET exp .  (51)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	AND  reduce 51
	OR  reduce 51
	')'  reduce 51


state 145
	expComp : exp GET exp .  (52)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	AND  reduce 52
	OR  reduce 52
	')'  reduce 52


state 146
	expBin : exp AND exp .  (45)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	')'  reduce 45


state 147
	expBin : exp OR exp .  (46)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	')'  reduce 46


state 148
	expComp : exp '<' exp .  (53)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	AND  reduce 53
	OR  reduce 53
	')'  reduce 53


state 149
	expComp : exp '>' exp .  (54)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	AND  reduce 54
	OR  reduce 54
	')'  reduce 54


state 150
	expComp : exp . EQUAL exp  (49)
	expComp : exp . NOTEQUAL exp  (50)
	expComp : exp . LET exp  (51)
	expComp : exp . GET exp  (52)
	expComp : exp . '<' exp  (53)
	expComp : exp . '>' exp  (54)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '^' exp  (60)
	exp : exp . '.' ID  (67)
	exp : exp . '[' exp ']'  (69)
	exp : exp . '[' exp ']' '[' exp ']'  (70)

	EQUAL  shift 124
	NOTEQUAL  shift 125
	LET  shift 126
	GET  shift 127
	'-'  shift 51
	'+'  shift 52
	'*'  shift 53
	'/'  shift 54
	'%'  shift 55
	'^'  shift 56
	'.'  shift 57
	'['  shift 58
	'<'  shift 130
	'>'  shift 131
	.  error


state 151
	expBin : expComp AND expComp .  (42)

	.  reduce 42


state 152
	expBin : expComp OR expComp .  (43)

	.  reduce 43


state 153
	spetialStatement : '{' instructions '}' .  (29)

	.  reduce 29


state 154
	instruction : IF expCompare spetialStatement ELSE spetialStatement .  (27)

	.  reduce 27


state 155
	instruction : ID '(' parameters ')' ';' .  (24)

	.  reduce 24


State 39 contains 1 shift/reduce conflict.


56 terminals, 20 nonterminals
71 grammar rules, 156 states
