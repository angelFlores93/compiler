   0  $accept : program $end

   1  program : definitions functions VOID MAIN '(' ')' '{' instructions '}'

   2  definitions :
   3              | definitions definition

   4  definition : type vars ';'
   5             | specialTypes

   6  vars : ID
   7       | vars ',' ID

   8  specialTypes : STRUCT '{' definitions '}' exp ';'
   9               | type '[' INTEGER ']' ID ';'
  10               | type '[' INTEGER ']' '[' INTEGER ']' ID ';'

  11  type : INT
  12       | DOUBLE
  13       | CHAR

  14  functions :
  15            | function functions

  16  function : type ID '(' parametersFunction ')' '{' instructions '}'

  17  instructions : instruction
  18               | instructions instruction

  19  instruction : definition
  20              | INPUT exp ';'
  21              | PRINT exp ';'
  22              | exp '=' exp ';'
  23              | ID '(' parameters ')' ';'
  24              | WHILE expCompare spetialStatement
  25              | IF expCompare spetialStatement
  26              | IF expCompare spetialStatement ELSE spetialStatement
  27              | RETURN exp ';'

  28  spetialStatement : '{' instructions '}'
  29                   | '{' '}'
  30                   | instruction

  31  parametersFunction :
  32                     | parameterFunction
  33                     | parametersFunction ',' parameterFunction

  34  parameterFunction : type ID

  35  parameters :
  36             | parameters vars

  37  expCompare : '(' expComp ')'
  38             | '(' expBin ')'

  39  expBin : expComp AND expComp
  40         | expComp OR expComp
  41         | '!' expComp
  42         | exp AND exp
  43         | exp OR exp
  44         | '!' exp
  45         | exp

  46  expComp : exp EQUAL exp
  47          | exp NOTEQUAL exp
  48          | exp LET exp
  49          | exp GET exp
  50          | exp '<' exp
  51          | exp '>' exp

  52  exp : exp '+' exp
  53      | exp '-' exp
  54      | exp '*' exp
  55      | exp '/' exp
  56      | exp '%' exp
  57      | exp '^' exp
  58      | '(' type ')' exp
  59      | ID '(' parameters ')'
  60      | INTEGER
  61      | REAL
  62      | LETTER
  63      | exp '.' ID
  64      | ID
  65      | exp '[' exp ']'
  66      | exp '[' exp ']' '[' exp ']'

state 0
	$accept : . program $end  (0)
	definitions : .  (2)

	.  reduce 2

	program  goto 1
	definitions  goto 2


state 1
	$accept : program . $end  (0)

	$end  accept


state 2
	program : definitions . functions VOID MAIN '(' ')' '{' instructions '}'  (1)
	definitions : definitions . definition  (3)
	functions : .  (14)

	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	VOID  reduce 14

	functions  goto 7
	definition  goto 8
	type  goto 9
	specialTypes  goto 10
	function  goto 11


state 3
	type : INT .  (11)

	.  reduce 11


state 4
	type : DOUBLE .  (12)

	.  reduce 12


state 5
	type : CHAR .  (13)

	.  reduce 13


state 6
	specialTypes : STRUCT . '{' definitions '}' exp ';'  (8)

	'{'  shift 12
	.  error


state 7
	program : definitions functions . VOID MAIN '(' ')' '{' instructions '}'  (1)

	VOID  shift 13
	.  error


state 8
	definitions : definitions definition .  (3)

	.  reduce 3


state 9
	definition : type . vars ';'  (4)
	specialTypes : type . '[' INTEGER ']' ID ';'  (9)
	specialTypes : type . '[' INTEGER ']' '[' INTEGER ']' ID ';'  (10)
	function : type . ID '(' parametersFunction ')' '{' instructions '}'  (16)

	ID  shift 14
	'['  shift 15
	.  error

	vars  goto 16


state 10
	definition : specialTypes .  (5)

	.  reduce 5


state 11
	functions : function . functions  (15)
	functions : .  (14)

	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	VOID  reduce 14

	functions  goto 17
	type  goto 18
	function  goto 11


state 12
	specialTypes : STRUCT '{' . definitions '}' exp ';'  (8)
	definitions : .  (2)

	.  reduce 2

	definitions  goto 19


state 13
	program : definitions functions VOID . MAIN '(' ')' '{' instructions '}'  (1)

	MAIN  shift 20
	.  error


state 14
	vars : ID .  (6)
	function : type ID . '(' parametersFunction ')' '{' instructions '}'  (16)

	'('  shift 21
	';'  reduce 6
	','  reduce 6


state 15
	specialTypes : type '[' . INTEGER ']' ID ';'  (9)
	specialTypes : type '[' . INTEGER ']' '[' INTEGER ']' ID ';'  (10)

	INTEGER  shift 22
	.  error


state 16
	definition : type vars . ';'  (4)
	vars : vars . ',' ID  (7)

	';'  shift 23
	','  shift 24
	.  error


state 17
	functions : function functions .  (15)

	.  reduce 15


state 18
	function : type . ID '(' parametersFunction ')' '{' instructions '}'  (16)

	ID  shift 25
	.  error


state 19
	definitions : definitions . definition  (3)
	specialTypes : STRUCT '{' definitions . '}' exp ';'  (8)

	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	'}'  shift 26
	.  error

	definition  goto 8
	type  goto 27
	specialTypes  goto 10


state 20
	program : definitions functions VOID MAIN . '(' ')' '{' instructions '}'  (1)

	'('  shift 28
	.  error


state 21
	function : type ID '(' . parametersFunction ')' '{' instructions '}'  (16)
	parametersFunction : .  (31)

	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	')'  reduce 31
	','  reduce 31

	type  goto 29
	parametersFunction  goto 30
	parameterFunction  goto 31


state 22
	specialTypes : type '[' INTEGER . ']' ID ';'  (9)
	specialTypes : type '[' INTEGER . ']' '[' INTEGER ']' ID ';'  (10)

	']'  shift 32
	.  error


state 23
	definition : type vars ';' .  (4)

	.  reduce 4


state 24
	vars : vars ',' . ID  (7)

	ID  shift 33
	.  error


state 25
	function : type ID . '(' parametersFunction ')' '{' instructions '}'  (16)

	'('  shift 21
	.  error


state 26
	specialTypes : STRUCT '{' definitions '}' . exp ';'  (8)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 39


state 27
	definition : type . vars ';'  (4)
	specialTypes : type . '[' INTEGER ']' ID ';'  (9)
	specialTypes : type . '[' INTEGER ']' '[' INTEGER ']' ID ';'  (10)

	ID  shift 40
	'['  shift 15
	.  error

	vars  goto 16


state 28
	program : definitions functions VOID MAIN '(' . ')' '{' instructions '}'  (1)

	')'  shift 41
	.  error


state 29
	parameterFunction : type . ID  (34)

	ID  shift 42
	.  error


state 30
	function : type ID '(' parametersFunction . ')' '{' instructions '}'  (16)
	parametersFunction : parametersFunction . ',' parameterFunction  (33)

	')'  shift 43
	','  shift 44
	.  error


state 31
	parametersFunction : parameterFunction .  (32)

	.  reduce 32


state 32
	specialTypes : type '[' INTEGER ']' . ID ';'  (9)
	specialTypes : type '[' INTEGER ']' . '[' INTEGER ']' ID ';'  (10)

	ID  shift 45
	'['  shift 46
	.  error


state 33
	vars : vars ',' ID .  (7)

	.  reduce 7


state 34
	exp : INTEGER .  (60)

	.  reduce 60


state 35
	exp : REAL .  (61)

	.  reduce 61


state 36
	exp : LETTER .  (62)

	.  reduce 62


state 37
	exp : ID . '(' parameters ')'  (59)
	exp : ID .  (64)

	'('  shift 47
	EQUAL  reduce 64
	NOTEQUAL  reduce 64
	LET  reduce 64
	GET  reduce 64
	AND  reduce 64
	OR  reduce 64
	'-'  reduce 64
	'+'  reduce 64
	'*'  reduce 64
	'/'  reduce 64
	'%'  reduce 64
	'^'  reduce 64
	')'  reduce 64
	'.'  reduce 64
	']'  reduce 64
	'['  reduce 64
	';'  reduce 64
	'='  reduce 64
	'<'  reduce 64
	'>'  reduce 64


state 38
	exp : '(' . type ')' exp  (58)

	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	.  error

	type  goto 48


state 39
	specialTypes : STRUCT '{' definitions '}' exp . ';'  (8)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	';'  shift 57
	.  error


state 40
	vars : ID .  (6)

	.  reduce 6


state 41
	program : definitions functions VOID MAIN '(' ')' . '{' instructions '}'  (1)

	'{'  shift 58
	.  error


state 42
	parameterFunction : type ID .  (34)

	.  reduce 34


state 43
	function : type ID '(' parametersFunction ')' . '{' instructions '}'  (16)

	'{'  shift 59
	.  error


state 44
	parametersFunction : parametersFunction ',' . parameterFunction  (33)

	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	.  error

	type  goto 29
	parameterFunction  goto 60


state 45
	specialTypes : type '[' INTEGER ']' ID . ';'  (9)

	';'  shift 61
	.  error


state 46
	specialTypes : type '[' INTEGER ']' '[' . INTEGER ']' ID ';'  (10)

	INTEGER  shift 62
	.  error


state 47
	exp : ID '(' . parameters ')'  (59)
	parameters : .  (35)

	.  reduce 35

	parameters  goto 63


state 48
	exp : '(' type . ')' exp  (58)

	')'  shift 64
	.  error


state 49
	exp : exp '-' . exp  (53)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 65


state 50
	exp : exp '+' . exp  (52)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 66


state 51
	exp : exp '*' . exp  (54)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 67


state 52
	exp : exp '/' . exp  (55)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 68


state 53
	exp : exp '%' . exp  (56)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 69


state 54
	exp : exp '^' . exp  (57)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 70


state 55
	exp : exp '.' . ID  (63)

	ID  shift 71
	.  error


state 56
	exp : exp '[' . exp ']'  (65)
	exp : exp '[' . exp ']' '[' exp ']'  (66)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 72


state 57
	specialTypes : STRUCT '{' definitions '}' exp ';' .  (8)

	.  reduce 8


state 58
	program : definitions functions VOID MAIN '(' ')' '{' . instructions '}'  (1)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	IF  shift 73
	WHILE  shift 74
	ID  shift 75
	INPUT  shift 76
	PRINT  shift 77
	RETURN  shift 78
	'('  shift 38
	.  error

	instructions  goto 79
	definition  goto 80
	type  goto 27
	specialTypes  goto 10
	exp  goto 81
	instruction  goto 82


state 59
	function : type ID '(' parametersFunction ')' '{' . instructions '}'  (16)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	IF  shift 73
	WHILE  shift 74
	ID  shift 75
	INPUT  shift 76
	PRINT  shift 77
	RETURN  shift 78
	'('  shift 38
	.  error

	instructions  goto 83
	definition  goto 80
	type  goto 27
	specialTypes  goto 10
	exp  goto 81
	instruction  goto 82


state 60
	parametersFunction : parametersFunction ',' parameterFunction .  (33)

	.  reduce 33


state 61
	specialTypes : type '[' INTEGER ']' ID ';' .  (9)

	.  reduce 9


state 62
	specialTypes : type '[' INTEGER ']' '[' INTEGER . ']' ID ';'  (10)

	']'  shift 84
	.  error


state 63
	parameters : parameters . vars  (36)
	exp : ID '(' parameters . ')'  (59)

	ID  shift 40
	')'  shift 85
	.  error

	vars  goto 86


state 64
	exp : '(' type ')' . exp  (58)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 87


state 65
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp '-' exp .  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	EQUAL  reduce 53
	NOTEQUAL  reduce 53
	LET  reduce 53
	GET  reduce 53
	AND  reduce 53
	OR  reduce 53
	'-'  reduce 53
	'+'  reduce 53
	')'  reduce 53
	']'  reduce 53
	';'  reduce 53
	'='  reduce 53
	'<'  reduce 53
	'>'  reduce 53


state 66
	exp : exp . '+' exp  (52)
	exp : exp '+' exp .  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	EQUAL  reduce 52
	NOTEQUAL  reduce 52
	LET  reduce 52
	GET  reduce 52
	AND  reduce 52
	OR  reduce 52
	'-'  reduce 52
	'+'  reduce 52
	')'  reduce 52
	']'  reduce 52
	';'  reduce 52
	'='  reduce 52
	'<'  reduce 52
	'>'  reduce 52


state 67
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp '*' exp .  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	EQUAL  reduce 54
	NOTEQUAL  reduce 54
	LET  reduce 54
	GET  reduce 54
	AND  reduce 54
	OR  reduce 54
	'-'  reduce 54
	'+'  reduce 54
	'*'  reduce 54
	'/'  reduce 54
	'%'  reduce 54
	')'  reduce 54
	']'  reduce 54
	';'  reduce 54
	'='  reduce 54
	'<'  reduce 54
	'>'  reduce 54


state 68
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp '/' exp .  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	EQUAL  reduce 55
	NOTEQUAL  reduce 55
	LET  reduce 55
	GET  reduce 55
	AND  reduce 55
	OR  reduce 55
	'-'  reduce 55
	'+'  reduce 55
	'*'  reduce 55
	'/'  reduce 55
	'%'  reduce 55
	')'  reduce 55
	']'  reduce 55
	';'  reduce 55
	'='  reduce 55
	'<'  reduce 55
	'>'  reduce 55


state 69
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp '%' exp .  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	EQUAL  reduce 56
	NOTEQUAL  reduce 56
	LET  reduce 56
	GET  reduce 56
	AND  reduce 56
	OR  reduce 56
	'-'  reduce 56
	'+'  reduce 56
	'*'  reduce 56
	'/'  reduce 56
	'%'  reduce 56
	')'  reduce 56
	']'  reduce 56
	';'  reduce 56
	'='  reduce 56
	'<'  reduce 56
	'>'  reduce 56


state 70
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp '^' exp .  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	EQUAL  reduce 57
	NOTEQUAL  reduce 57
	LET  reduce 57
	GET  reduce 57
	AND  reduce 57
	OR  reduce 57
	'-'  reduce 57
	'+'  reduce 57
	'*'  reduce 57
	'/'  reduce 57
	'%'  reduce 57
	')'  reduce 57
	']'  reduce 57
	';'  reduce 57
	'='  reduce 57
	'<'  reduce 57
	'>'  reduce 57


state 71
	exp : exp '.' ID .  (63)

	.  reduce 63


state 72
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp '[' exp . ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)
	exp : exp '[' exp . ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	']'  shift 88
	'['  shift 56
	.  error


state 73
	instruction : IF . expCompare spetialStatement  (25)
	instruction : IF . expCompare spetialStatement ELSE spetialStatement  (26)

	'('  shift 89
	.  error

	expCompare  goto 90


state 74
	instruction : WHILE . expCompare spetialStatement  (24)

	'('  shift 89
	.  error

	expCompare  goto 91


state 75
	instruction : ID . '(' parameters ')' ';'  (23)
	exp : ID . '(' parameters ')'  (59)
	exp : ID .  (64)

	'('  shift 92
	'-'  reduce 64
	'+'  reduce 64
	'*'  reduce 64
	'/'  reduce 64
	'%'  reduce 64
	'^'  reduce 64
	'.'  reduce 64
	'['  reduce 64
	'='  reduce 64


state 76
	instruction : INPUT . exp ';'  (20)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 93


state 77
	instruction : PRINT . exp ';'  (21)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 94


state 78
	instruction : RETURN . exp ';'  (27)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 95


state 79
	program : definitions functions VOID MAIN '(' ')' '{' instructions . '}'  (1)
	instructions : instructions . instruction  (18)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	IF  shift 73
	WHILE  shift 74
	ID  shift 75
	INPUT  shift 76
	PRINT  shift 77
	RETURN  shift 78
	'('  shift 38
	'}'  shift 96
	.  error

	definition  goto 80
	type  goto 27
	specialTypes  goto 10
	exp  goto 81
	instruction  goto 97


state 80
	instruction : definition .  (19)

	.  reduce 19


state 81
	instruction : exp . '=' exp ';'  (22)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	'='  shift 98
	.  error


state 82
	instructions : instruction .  (17)

	.  reduce 17


state 83
	function : type ID '(' parametersFunction ')' '{' instructions . '}'  (16)
	instructions : instructions . instruction  (18)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	IF  shift 73
	WHILE  shift 74
	ID  shift 75
	INPUT  shift 76
	PRINT  shift 77
	RETURN  shift 78
	'('  shift 38
	'}'  shift 99
	.  error

	definition  goto 80
	type  goto 27
	specialTypes  goto 10
	exp  goto 81
	instruction  goto 97


state 84
	specialTypes : type '[' INTEGER ']' '[' INTEGER ']' . ID ';'  (10)

	ID  shift 100
	.  error


state 85
	exp : ID '(' parameters ')' .  (59)

	.  reduce 59


state 86
	vars : vars . ',' ID  (7)
	parameters : parameters vars .  (36)

	','  shift 24
	ID  reduce 36
	')'  reduce 36


state 87
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : '(' type ')' exp .  (58)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'['  shift 56
	EQUAL  reduce 58
	NOTEQUAL  reduce 58
	LET  reduce 58
	GET  reduce 58
	AND  reduce 58
	OR  reduce 58
	'-'  reduce 58
	'+'  reduce 58
	'*'  reduce 58
	'/'  reduce 58
	'%'  reduce 58
	'^'  reduce 58
	')'  reduce 58
	'.'  reduce 58
	']'  reduce 58
	';'  reduce 58
	'='  reduce 58
	'<'  reduce 58
	'>'  reduce 58


state 88
	exp : exp '[' exp ']' .  (65)
	exp : exp '[' exp ']' . '[' exp ']'  (66)

	'['  shift 101
	EQUAL  reduce 65
	NOTEQUAL  reduce 65
	LET  reduce 65
	GET  reduce 65
	AND  reduce 65
	OR  reduce 65
	'-'  reduce 65
	'+'  reduce 65
	'*'  reduce 65
	'/'  reduce 65
	'%'  reduce 65
	'^'  reduce 65
	')'  reduce 65
	'.'  reduce 65
	']'  reduce 65
	';'  reduce 65
	'='  reduce 65
	'<'  reduce 65
	'>'  reduce 65


state 89
	expCompare : '(' . expComp ')'  (37)
	expCompare : '(' . expBin ')'  (38)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	'!'  shift 102
	.  error

	exp  goto 103
	expComp  goto 104
	expBin  goto 105


state 90
	instruction : IF expCompare . spetialStatement  (25)
	instruction : IF expCompare . spetialStatement ELSE spetialStatement  (26)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	IF  shift 73
	WHILE  shift 74
	ID  shift 75
	INPUT  shift 76
	PRINT  shift 77
	RETURN  shift 78
	'('  shift 38
	'{'  shift 106
	.  error

	definition  goto 80
	type  goto 27
	specialTypes  goto 10
	exp  goto 81
	instruction  goto 107
	spetialStatement  goto 108


state 91
	instruction : WHILE expCompare . spetialStatement  (24)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	IF  shift 73
	WHILE  shift 74
	ID  shift 75
	INPUT  shift 76
	PRINT  shift 77
	RETURN  shift 78
	'('  shift 38
	'{'  shift 106
	.  error

	definition  goto 80
	type  goto 27
	specialTypes  goto 10
	exp  goto 81
	instruction  goto 107
	spetialStatement  goto 109


state 92
	instruction : ID '(' . parameters ')' ';'  (23)
	exp : ID '(' . parameters ')'  (59)
	parameters : .  (35)

	.  reduce 35

	parameters  goto 110


state 93
	instruction : INPUT exp . ';'  (20)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	';'  shift 111
	.  error


state 94
	instruction : PRINT exp . ';'  (21)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	';'  shift 112
	.  error


state 95
	instruction : RETURN exp . ';'  (27)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	';'  shift 113
	.  error


state 96
	program : definitions functions VOID MAIN '(' ')' '{' instructions '}' .  (1)

	.  reduce 1


state 97
	instructions : instructions instruction .  (18)

	.  reduce 18


state 98
	instruction : exp '=' . exp ';'  (22)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 114


state 99
	function : type ID '(' parametersFunction ')' '{' instructions '}' .  (16)

	.  reduce 16


state 100
	specialTypes : type '[' INTEGER ']' '[' INTEGER ']' ID . ';'  (10)

	';'  shift 115
	.  error


state 101
	exp : exp '[' exp ']' '[' . exp ']'  (66)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 116


state 102
	expBin : '!' . expComp  (41)
	expBin : '!' . exp  (44)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 117
	expComp  goto 118


state 103
	expBin : exp . AND exp  (42)
	expBin : exp . OR exp  (43)
	expBin : exp .  (45)
	expComp : exp . EQUAL exp  (46)
	expComp : exp . NOTEQUAL exp  (47)
	expComp : exp . LET exp  (48)
	expComp : exp . GET exp  (49)
	expComp : exp . '<' exp  (50)
	expComp : exp . '>' exp  (51)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	EQUAL  shift 119
	NOTEQUAL  shift 120
	LET  shift 121
	GET  shift 122
	AND  shift 123
	OR  shift 124
	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	'<'  shift 125
	'>'  shift 126
	')'  reduce 45


state 104
	expCompare : '(' expComp . ')'  (37)
	expBin : expComp . AND expComp  (39)
	expBin : expComp . OR expComp  (40)

	AND  shift 127
	OR  shift 128
	')'  shift 129
	.  error


state 105
	expCompare : '(' expBin . ')'  (38)

	')'  shift 130
	.  error


state 106
	spetialStatement : '{' . instructions '}'  (28)
	spetialStatement : '{' . '}'  (29)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	IF  shift 73
	WHILE  shift 74
	ID  shift 75
	INPUT  shift 76
	PRINT  shift 77
	RETURN  shift 78
	'('  shift 38
	'}'  shift 131
	.  error

	instructions  goto 132
	definition  goto 80
	type  goto 27
	specialTypes  goto 10
	exp  goto 81
	instruction  goto 82


state 107
	spetialStatement : instruction .  (30)

	.  reduce 30


state 108
	instruction : IF expCompare spetialStatement .  (25)
	instruction : IF expCompare spetialStatement . ELSE spetialStatement  (26)

	ELSE  shift 133
	INTEGER  reduce 25
	REAL  reduce 25
	LETTER  reduce 25
	INT  reduce 25
	DOUBLE  reduce 25
	CHAR  reduce 25
	STRUCT  reduce 25
	IF  reduce 25
	WHILE  reduce 25
	ID  reduce 25
	INPUT  reduce 25
	PRINT  reduce 25
	RETURN  reduce 25
	'('  reduce 25
	'}'  reduce 25


state 109
	instruction : WHILE expCompare spetialStatement .  (24)

	.  reduce 24


state 110
	instruction : ID '(' parameters . ')' ';'  (23)
	parameters : parameters . vars  (36)
	exp : ID '(' parameters . ')'  (59)

	ID  shift 40
	')'  shift 134
	.  error

	vars  goto 86


state 111
	instruction : INPUT exp ';' .  (20)

	.  reduce 20


state 112
	instruction : PRINT exp ';' .  (21)

	.  reduce 21


state 113
	instruction : RETURN exp ';' .  (27)

	.  reduce 27


state 114
	instruction : exp '=' exp . ';'  (22)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	';'  shift 135
	.  error


state 115
	specialTypes : type '[' INTEGER ']' '[' INTEGER ']' ID ';' .  (10)

	.  reduce 10


state 116
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)
	exp : exp '[' exp ']' '[' exp . ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	']'  shift 136
	'['  shift 56
	.  error


state 117
	expBin : '!' exp .  (44)
	expComp : exp . EQUAL exp  (46)
	expComp : exp . NOTEQUAL exp  (47)
	expComp : exp . LET exp  (48)
	expComp : exp . GET exp  (49)
	expComp : exp . '<' exp  (50)
	expComp : exp . '>' exp  (51)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	EQUAL  shift 119
	NOTEQUAL  shift 120
	LET  shift 121
	GET  shift 122
	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	'<'  shift 125
	'>'  shift 126
	')'  reduce 44


state 118
	expBin : '!' expComp .  (41)

	.  reduce 41


state 119
	expComp : exp EQUAL . exp  (46)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 137


state 120
	expComp : exp NOTEQUAL . exp  (47)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 138


state 121
	expComp : exp LET . exp  (48)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 139


state 122
	expComp : exp GET . exp  (49)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 140


state 123
	expBin : exp AND . exp  (42)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 141


state 124
	expBin : exp OR . exp  (43)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 142


state 125
	expComp : exp '<' . exp  (50)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 143


state 126
	expComp : exp '>' . exp  (51)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 144


state 127
	expBin : expComp AND . expComp  (39)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 145
	expComp  goto 146


state 128
	expBin : expComp OR . expComp  (40)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	ID  shift 37
	'('  shift 38
	.  error

	exp  goto 145
	expComp  goto 147


state 129
	expCompare : '(' expComp ')' .  (37)

	.  reduce 37


state 130
	expCompare : '(' expBin ')' .  (38)

	.  reduce 38


state 131
	spetialStatement : '{' '}' .  (29)

	.  reduce 29


state 132
	instructions : instructions . instruction  (18)
	spetialStatement : '{' instructions . '}'  (28)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	IF  shift 73
	WHILE  shift 74
	ID  shift 75
	INPUT  shift 76
	PRINT  shift 77
	RETURN  shift 78
	'('  shift 38
	'}'  shift 148
	.  error

	definition  goto 80
	type  goto 27
	specialTypes  goto 10
	exp  goto 81
	instruction  goto 97


state 133
	instruction : IF expCompare spetialStatement ELSE . spetialStatement  (26)

	INTEGER  shift 34
	REAL  shift 35
	LETTER  shift 36
	INT  shift 3
	DOUBLE  shift 4
	CHAR  shift 5
	STRUCT  shift 6
	IF  shift 73
	WHILE  shift 74
	ID  shift 75
	INPUT  shift 76
	PRINT  shift 77
	RETURN  shift 78
	'('  shift 38
	'{'  shift 106
	.  error

	definition  goto 80
	type  goto 27
	specialTypes  goto 10
	exp  goto 81
	instruction  goto 107
	spetialStatement  goto 149


state 134
	instruction : ID '(' parameters ')' . ';'  (23)
	exp : ID '(' parameters ')' .  (59)

	';'  shift 150
	'-'  reduce 59
	'+'  reduce 59
	'*'  reduce 59
	'/'  reduce 59
	'%'  reduce 59
	'^'  reduce 59
	'.'  reduce 59
	'['  reduce 59
	'='  reduce 59


state 135
	instruction : exp '=' exp ';' .  (22)

	.  reduce 22


state 136
	exp : exp '[' exp ']' '[' exp ']' .  (66)

	.  reduce 66


state 137
	expComp : exp EQUAL exp .  (46)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	AND  reduce 46
	OR  reduce 46
	')'  reduce 46


state 138
	expComp : exp NOTEQUAL exp .  (47)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	AND  reduce 47
	OR  reduce 47
	')'  reduce 47


state 139
	expComp : exp LET exp .  (48)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	AND  reduce 48
	OR  reduce 48
	')'  reduce 48


state 140
	expComp : exp GET exp .  (49)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	AND  reduce 49
	OR  reduce 49
	')'  reduce 49


state 141
	expBin : exp AND exp .  (42)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	')'  reduce 42


state 142
	expBin : exp OR exp .  (43)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	')'  reduce 43


state 143
	expComp : exp '<' exp .  (50)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	AND  reduce 50
	OR  reduce 50
	')'  reduce 50


state 144
	expComp : exp '>' exp .  (51)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	AND  reduce 51
	OR  reduce 51
	')'  reduce 51


state 145
	expComp : exp . EQUAL exp  (46)
	expComp : exp . NOTEQUAL exp  (47)
	expComp : exp . LET exp  (48)
	expComp : exp . GET exp  (49)
	expComp : exp . '<' exp  (50)
	expComp : exp . '>' exp  (51)
	exp : exp . '+' exp  (52)
	exp : exp . '-' exp  (53)
	exp : exp . '*' exp  (54)
	exp : exp . '/' exp  (55)
	exp : exp . '%' exp  (56)
	exp : exp . '^' exp  (57)
	exp : exp . '.' ID  (63)
	exp : exp . '[' exp ']'  (65)
	exp : exp . '[' exp ']' '[' exp ']'  (66)

	EQUAL  shift 119
	NOTEQUAL  shift 120
	LET  shift 121
	GET  shift 122
	'-'  shift 49
	'+'  shift 50
	'*'  shift 51
	'/'  shift 52
	'%'  shift 53
	'^'  shift 54
	'.'  shift 55
	'['  shift 56
	'<'  shift 125
	'>'  shift 126
	.  error


state 146
	expBin : expComp AND expComp .  (39)

	.  reduce 39


state 147
	expBin : expComp OR expComp .  (40)

	.  reduce 40


state 148
	spetialStatement : '{' instructions '}' .  (28)

	.  reduce 28


state 149
	instruction : IF expCompare spetialStatement ELSE spetialStatement .  (26)

	.  reduce 26


state 150
	instruction : ID '(' parameters ')' ';' .  (23)

	.  reduce 23


55 terminals, 19 nonterminals
67 grammar rules, 151 states
